../../object_detection/utils/config_util.py:131:  pipeline_config.train_config.CopyFrom(configs["train_config"])
../../object_detection/utils/config_util.py:239:  return train_config.optimizer.WhichOneof("optimizer")
../../object_detection/utils/config_util_test.py:78:    pipeline_config.train_config.batch_size = 32
../../object_detection/utils/config_util_test.py:101:    pipeline_config.train_config.batch_size = 32
../../object_detection/utils/config_util_test.py:122:    pipeline_config.train_config.batch_size = 32
../../object_detection/utils/config_util_test.py:137:    pipeline_config.train_config.batch_size = 32
../../object_detection/utils/config_util_test.py:163:    train_config.batch_size = 32
../../object_detection/utils/config_util_test.py:208:    optimizer = getattr(pipeline_config.train_config.optimizer, optimizer_name)
../../object_detection/utils/config_util_test.py:221:    optimizer = getattr(pipeline_config.train_config.optimizer, optimizer_name)
../../object_detection/utils/config_util_test.py:235:    optimizer = getattr(pipeline_config.train_config.optimizer, optimizer_name)
../../object_detection/utils/config_util_test.py:252:    optimizer = getattr(pipeline_config.train_config.optimizer, optimizer_name)
../../object_detection/utils/config_util_test.py:287:    pipeline_config.train_config.batch_size = original_batch_size
../../object_detection/utils/config_util_test.py:302:    pipeline_config.train_config.batch_size = original_batch_size
../../object_detection/utils/config_util_test.py:317:    optimizer_config = pipeline_config.train_config.optimizer.rms_prop_optimizer
../../object_detection/utils/config_util_test.py:382:    pipeline_config.train_config.num_steps = original_num_train_steps
../../object_detection/trainer.py:176:       train_config.merge_multiple_label_boxes,
../../object_detection/trainer.py:177:       train_config.use_multiclass_scores)
../../object_detection/trainer.py:243:      for step in train_config.data_augmentation_options]
../../object_detection/trainer.py:261:          train_config.batch_size // num_clones, create_tensor_dict_fn,
../../object_detection/trainer.py:262:          train_config.batch_queue_capacity,
../../object_detection/trainer.py:263:          train_config.num_batch_queue_threads,
../../object_detection/trainer.py:264:          train_config.prefetch_queue_capacity, data_augmentation_options)
../../object_detection/trainer.py:284:          train_config.optimizer)
../../object_detection/trainer.py:289:    if train_config.sync_replicas:
../../object_detection/trainer.py:292:          replicas_to_aggregate=train_config.replicas_to_aggregate,
../../object_detection/trainer.py:297:      regularization_losses = (None if train_config.add_regularization_loss
../../object_detection/trainer.py:304:      # Optionally multiply bias gradients by train_config.bias_grad_multiplier.
../../object_detection/trainer.py:305:      if train_config.bias_grad_multiplier:
../../object_detection/trainer.py:310:            multiplier=train_config.bias_grad_multiplier)
../../object_detection/trainer.py:313:      if train_config.freeze_variables:
../../object_detection/trainer.py:315:            grads_and_vars, train_config.freeze_variables)
../../object_detection/trainer.py:318:      if train_config.gradient_clipping_by_norm > 0:
../../object_detection/trainer.py:321:              grads_and_vars, train_config.gradient_clipping_by_norm)
../../object_detection/trainer.py:361:    keep_checkpoint_every_n_hours = train_config.keep_checkpoint_every_n_hours
../../object_detection/trainer.py:367:    if train_config.fine_tune_checkpoint:
../../object_detection/trainer.py:368:      if not train_config.fine_tune_checkpoint_type:
../../object_detection/trainer.py:369:        # train_config.from_detection_checkpoint field is deprecated. For
../../object_detection/trainer.py:372:        if train_config.from_detection_checkpoint:
../../object_detection/trainer.py:373:          train_config.fine_tune_checkpoint_type = 'detection'
../../object_detection/trainer.py:375:          train_config.fine_tune_checkpoint_type = 'classification'
../../object_detection/trainer.py:377:          fine_tune_checkpoint_type=train_config.fine_tune_checkpoint_type,
../../object_detection/trainer.py:379:              train_config.load_all_detection_checkpoint_vars))
../../object_detection/trainer.py:382:                               var_map, train_config.fine_tune_checkpoint))
../../object_detection/trainer.py:385:        init_saver.restore(sess, train_config.fine_tune_checkpoint)
../../object_detection/trainer.py:394:        startup_delay_steps=train_config.startup_delay_steps,
../../object_detection/trainer.py:398:            train_config.num_steps if train_config.num_steps else None),
../../object_detection/inputs.py:275:        for step in train_config.data_augmentation_options
../../object_detection/inputs.py:289:        retain_original_image=train_config.retain_original_images)
../../object_detection/inputs.py:293:        batch_size=params['batch_size'] if params else train_config.batch_size,
../../object_detection/inputs.py:294:        max_num_boxes=train_config.max_number_of_boxes,
../../object_detection/model_lib.py:206:          unpad_groundtruth_tensors=train_config.unpad_groundtruth_tensors)
../../object_detection/model_lib.py:242:      if train_config.fine_tune_checkpoint and hparams.load_pretrained:
../../object_detection/model_lib.py:243:        if not train_config.fine_tune_checkpoint_type:
../../object_detection/model_lib.py:244:          # train_config.from_detection_checkpoint field is deprecated. For
../../object_detection/model_lib.py:245:          # backward compatibility, set train_config.fine_tune_checkpoint_type
../../object_detection/model_lib.py:246:          # based on train_config.from_detection_checkpoint.
../../object_detection/model_lib.py:247:          if train_config.from_detection_checkpoint:
../../object_detection/model_lib.py:248:            train_config.fine_tune_checkpoint_type = 'detection'
../../object_detection/model_lib.py:250:            train_config.fine_tune_checkpoint_type = 'classification'
../../object_detection/model_lib.py:252:            fine_tune_checkpoint_type=train_config.fine_tune_checkpoint_type,
../../object_detection/model_lib.py:254:                train_config.load_all_detection_checkpoint_vars))
../../object_detection/model_lib.py:257:                asg_map, train_config.fine_tune_checkpoint,
../../object_detection/model_lib.py:261:            tf.train.init_from_checkpoint(train_config.fine_tune_checkpoint,
../../object_detection/model_lib.py:266:          tf.train.init_from_checkpoint(train_config.fine_tune_checkpoint,
../../object_detection/model_lib.py:273:      if train_config.add_regularization_loss:
../../object_detection/model_lib.py:289:          train_config.optimizer)
../../object_detection/model_lib.py:298:      if train_config.freeze_variables:
../../object_detection/model_lib.py:301:            exclude_patterns=train_config.freeze_variables)
../../object_detection/model_lib.py:304:      if train_config.gradient_clipping_by_norm > 0:
../../object_detection/model_lib.py:305:        clip_gradients_value = train_config.gradient_clipping_by_norm
../../object_detection/model_lib.py:499:        train_batch_size=train_config.batch_size,
../../object_detection/train.py:40:        --train_config_path=train_config.pbtxt \
../../object_detection/model_lib_test.py:92:        batch_size = train_config.batch_size
